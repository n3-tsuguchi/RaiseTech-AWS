- name: Install MariaDB (MySQL compatible) and required Python library
  become: yes
  ansible.builtin.dnf:
    name:
      - mariadb-server
      - python3-PyMySQL
    state: present
    update_cache: yes
  when: ansible_os_family == "RedHat"

- name: Start and enable MariaDB service
  become: yes
  ansible.builtin.systemd:
    name: mariadb
    state: started
    enabled: yes

- name: Set the root password for the first time
  become: yes
  ansible.builtin.mysql_user:
    name: root
    host: localhost
    password: "{{ mysql_root_password }}"
    check_implicit_admin: true # This allows setting password without the old one on initial setup
  vars:
    ansible_python_interpreter: /usr/bin/python3
  no_log: true # Do not log the password

- name: Remove anonymous MySQL users
  become: yes
  ansible.builtin.mysql_user:
    name: ""
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: true

- name: Remove the test database
  become: yes
  ansible.builtin.mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: true

- name: Create application database
  become: yes
  ansible.builtin.mysql_db:
    name: "{{ mysql_database }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  when: mysql_database is defined

- name: Create application user
  become: yes
  ansible.builtin.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_user_password }}"
    priv: "{{ mysql_database }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: true
  when: mysql_user is defined and mysql_user_password is defined

- name: Copy custom MySQL configuration file
  become: yes
  ansible.builtin.template:
    src: my.cnf.j2
    dest: /etc/my.cnf.d/custom.cnf
    owner: root
    group: root
    mode: '0644'
  notify: restart mariadb
